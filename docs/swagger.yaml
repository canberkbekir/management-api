basePath: /api
definitions:
  model.Role:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      status:
        type: integer
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Management API
  version: "1.0"
paths:
  /user:
    get:
      consumes:
        - application/json
      description: Get all Users
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Get all Users
      tags:
        - User
    post:
      consumes:
        - application/json
      description: Upsert user
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Upsert user
      tags:
        - User
  /user/id/:id:
    delete:
      consumes:
        - application/json
      description: Delete user
      parameters:
        - description: User ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete user
      tags:
        - User
    get:
      consumes:
        - application/json
      description: Get users by ID
      parameters:
        - description: User ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.User'
              type: array
            type: array
      summary: Get users by ID
      tags:
        - User
securityDefinitions:
  JWT:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
